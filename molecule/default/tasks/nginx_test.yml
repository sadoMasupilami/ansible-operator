---
- name: Create the webserver-ansible.mklug.at/v1alpha1.Nginx
  k8s:
    state: present
    namespace: '{{ namespace }}'
    definition: "{{ lookup('template', '/'.join([samples_dir, cr_file])) | from_yaml }}"
    wait: yes
    wait_timeout: 300
    wait_condition:
      type: Running
      reason: Successful
      status: "True"
  vars:
    cr_file: 'webserver-ansible_v1alpha1_nginx.yaml'

- name: Nginx
  debug:
    var: nginx
  vars:
    nginx: '{{ lookup("community.kubernetes.k8s", api_version="webserver-ansible.mklug.at/v1alpha1", kind="Nginx",
    namespace=namespace, resource_name="nginx-sample") }}'

- name: Nginx replicas
  assert:
    that: nginx.spec.replicas == 3
  vars:
    nginx: '{{ lookup("community.kubernetes.k8s", api_version="webserver-ansible.mklug.at/v1alpha1", kind="Nginx",
    namespace=namespace, resource_name="nginx-sample") }}'

- name: Nginx ingress hostname
  assert:
    that: nginx.spec.ingress.hostname == "nginx.example.com"
  vars:
    nginx: '{{ lookup("community.kubernetes.k8s", api_version="webserver-ansible.mklug.at/v1alpha1", kind="Nginx",
    namespace=namespace,
    resource_name="nginx-sample") }}'

- name: Deployment
  debug:
    var: deployment
  vars:
    deployment: '{{ lookup("community.kubernetes.k8s", api_version="apps/v1", kind="Deployment", namespace=namespace,
            resource_name="nginx-sample") }}'

- name: Deployment replicas
  assert:
    that: deployment.spec.replicas == 3
  vars:
    deployment: '{{ lookup("community.kubernetes.k8s", api_version="apps/v1", kind="Deployment", namespace=namespace,
    resource_name="nginx-sample") }}'

- name: Ingress
  debug:
    var: ingress
  vars:
    ingress: '{{ lookup("community.kubernetes.k8s", api_version="extensions/v1beta1", kind="Ingress", namespace=namespace,
            resource_name="nginx-sample") }}'

- name: Ingress hostname
  assert:
    that: ingress.spec.rules[0].host == "nginx.example.com"
  vars:
    ingress: '{{ lookup("community.kubernetes.k8s", api_version="extensions/v1beta1", kind="Ingress", namespace=namespace,
    resource_name="nginx-sample") }}'
